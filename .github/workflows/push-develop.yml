name: push-develop

on:
  push :
    branches:
      - develop

jobs:
  test-all:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Push to develop"
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
      - run: mvn -Dtest="*Test" test

  publish_in_dockerhub:
    name: Publish in DockerHub
    runs-on: ubuntu-20.04
    needs: [test-all]
    env:
      IMAGE_NAME: tfm-mca-filemanagement-oauth2

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Generate tag
        run: echo ::set-output name=tag::$(mvn -q help:evaluate -Dexpression=project.version -DforceStdout)
        id: project
      - name: Build image
        run: mvn clean package jib:dockerBuild -Dimage=$IMAGE_NAME
      - name: Login to DockerHub
        run: docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Push image to DockerHub
        run: |
          docker tag $IMAGE_NAME ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:${{ steps.project.outputs.tag }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:${{ steps.project.outputs.tag }}
  okteto-deploy:
    name: Deploy into okteto kubernetes
    runs-on: ubuntu-20.04
    needs:
      - publish_in_dockerhub
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Get Kubeconfig
        uses: okteto/actions/namespace@v1
        id: namespace
        with:
          token: ${{ secrets.OKTETO_TOKEN }}
          namespace: tfm-pre-agat-prog
      - name: "Apply deployment"
        uses: okteto/apply@2.10.1
        env:
          KUBECONFIG: ${{ steps.namespace.outputs.kubeconfig }}
        with:
          manifest: ./k8s/oauth2.yml
